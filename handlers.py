from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from utils import analyze_mood_with_openai, send_amplitude_event
import base64
import logging

router = Router()
logger = logging.getLogger(__name__)

@router.message(CommandStart())
async def start_handler(message: Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ª–∏—Ü–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!")

@router.message(F.photo)
async def photo_handler(message: Message):
    user_id = message.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Ñ–æ—Ç–æ
        photo = message.photo[-1]
        file = await message.bot.get_file(photo.file_id)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        image_data = await message.bot.download_file(file.file_path)
        
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∏ –∫–æ–¥–∏—Ä—É–µ–º
        image_bytes = image_data.getvalue()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º getvalue() –¥–ª—è BytesIO
        base64_image = base64.b64encode(image_bytes).decode('utf-8')
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        if len(base64_image) < 1000:
            await message.answer("–§–æ—Ç–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞")
            return

        # –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
        mood = await analyze_mood_with_openai(base64_image)
        response = f"üîç –í–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood.capitalize()}"
        
        await message.answer(response)
        send_amplitude_event("mood_analyzed", user_id, {"mood": mood})

    except Exception as e:
        logger.error(f"Photo processing error: {str(e)}")
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")